<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <title>VR街づくりテスト – Aボタン( index-3 )ジャンプ修正版</title>
  <meta name="viewport" content="width=device-width,initial-scale=1.0">
  <script src="https://cdn.jsdelivr.net/npm/three@0.157.0/build/three.min.js"></script>
  <style>
    body{margin:0;overflow:hidden;background:black;}
    #startVR{
      position:fixed;top:20px;left:20px;z-index:10;
      padding:10px 20px;font-size:1.2em;
      background:#4CAF50;color:#fff;border:none;border-radius:5px;
      cursor:pointer;
    }
  </style>
</head>
<body>
<button id="startVR">VRモード開始</button>

<script>
/* ─── 基本セットアップ ───────────────────────────── */
const renderer = new THREE.WebGLRenderer({antialias:true});
renderer.setSize(innerWidth,innerHeight);
renderer.xr.enabled = true;
document.body.appendChild(renderer.domElement);

const scene = new THREE.Scene();
scene.background = new THREE.Color(0x222222);

/* プレイヤーリグ */
const playerRig = new THREE.Group();
scene.add(playerRig);

const camera = new THREE.PerspectiveCamera(70,innerWidth/innerHeight,0.1,1000);
camera.position.set(0,1.6,3);
playerRig.add(camera);

/* ライト */
scene.add(new THREE.AmbientLight(0xffffff,0.5));
scene.add(new THREE.HemisphereLight(0xffffff,0x444444).position.set(0,10,0));

/* グリッド & デモ */
scene.add(new THREE.GridHelper(50,50));
const cube=new THREE.Mesh(new THREE.BoxGeometry(1,1,1),new THREE.MeshNormalMaterial());
cube.position.set(0,1.6,-4);scene.add(cube);

/* ─── パラメータ ────────────────────────────────── */
const tmpFwd=new THREE.Vector3(), tmpSide=new THREE.Vector3();
const MOVE=0.05, ROT=0.03, JUMP=0.19, GRAV=0.0098;
playerRig.userData.yVel=0;
playerRig.userData.canJump=true;

/* ─── メインループ ─────────────────────────────── */
renderer.setAnimationLoop((t,frame)=>{
  cube.rotation.x+=0.01; cube.rotation.y+=0.01;

  const session=renderer.xr.getSession();
  if(session&&frame){
    for(const src of session.inputSources){
      if(!src.gamepad) continue;
      const g=src.gamepad, xi=g.axes.length>=4?2:0, yi=xi+1;
      const x=g.axes[xi], y=g.axes[yi];

      if(!src.userData.prev) src.userData.prev=g.buttons.map(b=>b.pressed);

      /* 左：移動 */
      if(src.handedness==='left' && Math.hypot(x,y)>0.1){
        camera.getWorldDirection(tmpFwd); tmpFwd.y=0; tmpFwd.normalize();
        tmpSide.crossVectors(camera.up,tmpFwd).normalize();
        playerRig.position.addScaledVector(tmpFwd,-y*MOVE)
                          .addScaledVector(tmpSide,-x*MOVE);   // 左右反転済
      }

      /* 右：回転＋ジャンプ */
      if(src.handedness==='right'){
        if(Math.abs(x)>0.15) playerRig.rotation.y-=x*ROT;

        /* ★ A ボタンは index 3 */
        const a=g.buttons[3]?.pressed, wasA=src.userData.prev[3];
        if(a && !wasA && playerRig.userData.canJump){
          playerRig.userData.yVel=JUMP;
          playerRig.userData.canJump=false;
        }
      }
      src.userData.prev=g.buttons.map(b=>b.pressed);
    }
  }

  /* ジャンプ物理 */
  if(!playerRig.userData.canJump){
    playerRig.position.y+=playerRig.userData.yVel;
    playerRig.userData.yVel-=GRAV;
    if(playerRig.position.y<=0){
      playerRig.position.y=0;
      playerRig.userData.yVel=0;
      playerRig.userData.canJump=true;
    }
  }

  renderer.render(scene,camera);
});

/* ─── VR開始 ──────────────────────────────────── */
document.getElementById('startVR').addEventListener('click',async()=>{
  if(!navigator.xr){alert('WebXR 未対応');return;}
  const s=await navigator.xr.requestSession('immersive-vr',{requiredFeatures:['local-floor']});
  renderer.xr.setReferenceSpaceType('local-floor');
  renderer.xr.setSession(s);
});

/* リサイズ */
addEventListener('resize',()=>{
  camera.aspect=innerWidth/innerHeight;
  camera.updateProjectionMatrix();
  renderer.setSize(innerWidth,innerHeight);
});
</script>
</body>
</html>